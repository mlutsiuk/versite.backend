<?php

namespace App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Controllers;

use Apiato\Core\Exceptions\IncorrectIdException;
use Apiato\Core\Exceptions\InvalidTransformerException;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Update{{model}}Action;
use App\Containers\{{section-name}}\{{container-name}}\Data\Dto\Update{{model}}Dto;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Update{{model}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Transformers\{{model}}Transformer;
use App\Ship\Exceptions\NotFoundException;
use App\Ship\Exceptions\UpdateResourceFailedException;
use App\Ship\Parents\Controllers\{{base-controller}};

class {{class-name}} extends {{base-controller}}
{
    /**
     * @param Update{{model}}Request $request
     * @return array
     * @throws InvalidTransformerException
     * @throws UpdateResourceFailedException
     * @throws IncorrectIdException
     * @throws NotFoundException
     */
    public function update{{model}}(Update{{model}}Request $request): array
    {
        $dto = new Update{{model}}Dto($request->validated());
        ${{entity}} = app(Update{{model}}Action::class)->run($dto, $request->validated()['id']);

        return $this->transform(${{entity}}, {{model}}Transformer::class);
    }
}
